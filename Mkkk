NAME = minishell

SRCS = minishell.c lexer.c

CC = gcc

CFLAGS = -Wall -Werror -Wextra

OBJS = $(SRCS:.c=.o)

LIBFT = libft/libft.a

$(LIBFT):
	make -C libft

all: $(NAME)

$(NAME): $(OBJS) $(LIBFT)
	$(CC) $(CFLAGS) $(OBJS) -o $(NAME) -I libft -L libft -lft -lreadline

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

minishell.o: minishell.h

clean:
	rm -rf $(OBJS)

fclean: clean libft_clean
	rm -rf $(NAME)

re: fclean all

.PHONY: libft libft_clean libft_re all clean fclean

In this updated Makefile:

    I added dependencies for the object files (%.o) based on their corresponding .c files.
    I added a dependency for minishell.o on minishell.h to ensure it gets recompiled when the header file changes.

With these changes, make should correctly rebuild your targets when you modify your source files or header files.
